# Generated by Django 5.0.6 on 2024-07-01 10:21

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ChatRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_name', models.CharField(max_length=20, unique=True)),
                ('room_password', models.CharField(max_length=128)),
                ('is_occupied', models.BooleanField(default=False)),
                ('admin_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='admin_rooms', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ChatUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chat_user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserAndRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_admin', models.BooleanField(default=False)),
                ('chat_room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shared.chatroom')),
                ('chat_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shared.chatuser')),
            ],
        ),
        migrations.AddField(
            model_name='chatuser',
            name='chat_rooms',
            field=models.ManyToManyField(through='shared.UserAndRoom', to='shared.chatroom'),
        ),
        migrations.AddField(
            model_name='chatroom',
            name='chat_users',
            field=models.ManyToManyField(through='shared.UserAndRoom', to='shared.chatuser'),
        ),
    ]
